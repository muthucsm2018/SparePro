//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SparePro.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SpareProEntities : DbContext
    {
        public SpareProEntities()
            : base("name=SpareProEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TblBrandMaster> TblBrandMasters { get; set; }
        public virtual DbSet<TblDefaultMasterDetail> TblDefaultMasterDetails { get; set; }
        public virtual DbSet<TblDefaultMasterHeader> TblDefaultMasterHeaders { get; set; }
        public virtual DbSet<TblHomePage> TblHomePages { get; set; }
        public virtual DbSet<TblMenuMasterDetail> TblMenuMasterDetails { get; set; }
        public virtual DbSet<TblMenuMasterHeader> TblMenuMasterHeaders { get; set; }
        public virtual DbSet<TblRoleMaster> TblRoleMasters { get; set; }
        public virtual DbSet<TblUserMaster> TblUserMasters { get; set; }
        public virtual DbSet<TblMenuRoleMatrixAccess> TblMenuRoleMatrixAccesses { get; set; }
        public virtual DbSet<TblItemMaster> TblItemMasters { get; set; }
        public virtual DbSet<TblPartMaster> TblPartMasters { get; set; }
        public virtual DbSet<TblPaymentDetail> TblPaymentDetails { get; set; }
        public virtual DbSet<TblStock> TblStocks { get; set; }
        public virtual DbSet<TblPurchaseDetail> TblPurchaseDetails { get; set; }
        public virtual DbSet<TblPurchas> TblPurchases { get; set; }
        public virtual DbSet<TblOrderDetail> TblOrderDetails { get; set; }
        public virtual DbSet<TblOrder> TblOrders { get; set; }
        public virtual DbSet<TblAccPaymentDetail> TblAccPaymentDetails { get; set; }
    
        public virtual ObjectResult<sp_frm_get_Stock_Report_Result> sp_frm_get_Stock_Report(Nullable<long> brandID, Nullable<long> partID, Nullable<long> itemID)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(long));
    
            var partIDParameter = partID.HasValue ?
                new ObjectParameter("PartID", partID) :
                new ObjectParameter("PartID", typeof(long));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Stock_Report_Result>("sp_frm_get_Stock_Report", brandIDParameter, partIDParameter, itemIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_getSales_Result> sp_frm_getSales(Nullable<int> requestedBy, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var requestedByParameter = requestedBy.HasValue ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_getSales_Result>("sp_frm_getSales", requestedByParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Order_Report_Result> sp_frm_get_Order_Report(Nullable<int> requestedBy, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var requestedByParameter = requestedBy.HasValue ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Order_Report_Result>("sp_frm_get_Order_Report", requestedByParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_getPurchases_Result> sp_frm_getPurchases(Nullable<int> requestedBy, Nullable<System.DateTime> createdDate, string itemName)
        {
            var requestedByParameter = requestedBy.HasValue ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_getPurchases_Result>("sp_frm_getPurchases", requestedByParameter, createdDateParameter, itemNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Payment_Report_Result> sp_frm_get_Payment_Report(Nullable<int> requestedBy, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var requestedByParameter = requestedBy.HasValue ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Payment_Report_Result>("sp_frm_get_Payment_Report", requestedByParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Monthly_Sales_Report_Result> sp_frm_get_Monthly_Sales_Report(Nullable<int> requestedBy, Nullable<int> year, string month)
        {
            var requestedByParameter = requestedBy.HasValue ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Monthly_Sales_Report_Result>("sp_frm_get_Monthly_Sales_Report", requestedByParameter, yearParameter, monthParameter);
        }
    }
}
